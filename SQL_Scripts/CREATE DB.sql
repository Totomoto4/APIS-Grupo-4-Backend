-- DB With ALL
-- DROP DATABASE if it exists
DROP DATABASE IF EXISTS `apis-uade-simpsons`;

-- CREATE DB.sql
CREATE DATABASE `apis-uade-simpsons`;

-- USE the database
USE `apis-uade-simpsons`;

-- CREATE USERS.sql
DROP TABLE IF EXISTS USERS;

CREATE TABLE USERS (
    USER_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_USERNAME VARCHAR(255) NOT NULL,
    USER_NAME VARCHAR(255),
    USER_LASTNAME VARCHAR(255),
    USER_ADMINISTRATOR BOOLEAN,
    USER_EMAIL VARCHAR(255) UNIQUE,
    USER_PASSWORD_HASH VARCHAR(255)
);

-- CREATE ORDERS.sql
DROP TABLE IF EXISTS ORDERS;

CREATE TABLE ORDERS (
    ORDER_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    USER_ID INT NOT NULL,
    ORDER_DATE_TIME DATETIME NOT NULL,
    ORDER_TOTAL FLOAT NOT NULL,
    ORDER_CARD_NUMBER BIGINT NOT NULL,
    ORDER_ADDRESS VARCHAR(255) NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

-- CREATE PRODUCTS ORDERED.sql
DROP TABLE IF EXISTS PRODUCT_ORDERED;

CREATE TABLE PRODUCT_ORDERED (
    PRODUCT_ORDERED_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    PRODUCT_ORDERED_ORDER_ID BIGINT NOT NULL,
    PRODUCT_ORDERED_NAME VARCHAR(255),
    PRODUCT_ORDERED_PRICE FLOAT,
    PRODUCT_ORDERED_QUANTITY INT,
    FOREIGN KEY (PRODUCT_ORDERED_ORDER_ID) REFERENCES ORDERS(ORDER_ID),
    CONSTRAINT chk_quantity CHECK (PRODUCT_ORDERED_QUANTITY > 0),
    CONSTRAINT chk_price CHECK (PRODUCT_ORDERED_PRICE > 0)
);
